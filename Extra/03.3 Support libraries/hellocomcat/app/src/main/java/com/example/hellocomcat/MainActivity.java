package com.example.hellocomcat;

import android.os.Build;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.TextView;

import java.lang.reflect.Field;
import java.util.Random;

public class MainActivity extends AppCompatActivity {
    private TextView mHelloTextView;
    private String[] mColorArray = {"red", "pink", "purple", "deep_purple",
            "indigo", "blue", "light_blue", "cyan", "teal", "green",
            "light_green", "lime", "yellow", "amber", "orange", "deep_orange",
            "brown", "grey", "blue_grey", "black" };
    private static final String TAG = "MyActivity";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mHelloTextView=findViewById(R.id.hello_textview);
    //    Log.d(TAG,"I am limbu");
        if (savedInstanceState!=null){

            mHelloTextView.setTextColor(savedInstanceState.getInt("color"));
        }

    }

    @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        //save the current text color.
        outState.putInt("color",mHelloTextView.getCurrentTextColor());
    }

    public void changeColor(View view) {
      //  Log.d(TAG,"I am limbu");
        //create a random number object by using the Random class (a Java class) to generate simple random numbers.
        Random random = new Random();
        String colorName=mColorArray[random.nextInt(20)];
        //The nextInt() method with the argument 20 gets another random integer between 0 and 19.

        int colorResourceName=getResources().getIdentifier(colorName,"color",this.getApplicationContext().getPackageName());

        Log.d("Color resource name :",Integer.toString(colorResourceName));
        //above line fetch the id for colorName which is generated by android in runtime.
        /*
        In runtime android convert all XML file into resources with internal integer id.
        NOTE: both name and value have separate ID.

        * above line matches the color strings from the colorName array with the corresponding
        * color name IDs in the XML resource file.
        *
        * first get all resources -- getIdentifier(random generated color name from array,resources name which is color.xml but
             * we provide its name as string "color",package name:- currently this current application package name);
        * */

            int colorRes= ContextCompat.getColor(this,colorResourceName);

            //get color in int value from color.xml file.
        Log.d("Blue color:",Integer.toString( ContextCompat.getColor(this,R.color.blue)));

        //fetch resource name for color blue.
        Log.d("Color name:",getResources().getResourceName(R.color.blue));

        // get entry name for color blue which is blue.
        Log.d("Color  endtry name:",getResources().getResourceEntryName(R.color.blue));

        // get identifer which is ID for color blue.
        int id=R.color.blue;
        Log.d("Color  ID:",Integer.toString(id));

        Field[] allName=R.string.class.getFields();



        //fetch entire Entry name of string.xml file
        Field[] fields = R.string.class.getFields();
        String[] allNames = new String[fields.length];
        for (int  i =0; i < fields.length; i++) {
            allNames[i] = fields[i].getName();
            Log.d("Color field name :",allNames[i]);
        }


            // above line fetch the color code from resources with its colorId.
            //
            mHelloTextView.setTextColor(colorRes);



    }
}
